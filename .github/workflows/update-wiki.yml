name: Update Wiki from Stars

on:
  workflow_dispatch:
  schedule:
    - cron: "0 15 * * *"  # 매일 00:00 KST(= UTC 15:00)

jobs:
  run:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      WIKI_REMOTE: https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.wiki.git

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install deps
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm i
          fi

      - name: Clone wiki repo (into ./wiki)
        run: |
          git clone "${WIKI_REMOTE}" wiki
          cd wiki
          echo "Wiki branch: $(git rev-parse --abbrev-ref HEAD || echo master)"
          ls -al

      # 1) notes/만 남기고 wiki 루트 전체 강제 청소
      - name: Hard clean wiki (keep notes/)
        working-directory: wiki
        shell: bash
        run: |
          set -e
          # 숨김 포함, 확장 글로브
          shopt -s extglob dotglob
          # .git, notes/만 남기고 전부 삭제 + git rm으로 추적 제거
          for f in *; do
            if [[ "$f" != ".git" && "$f" != "notes" ]]; then
              rm -rf "$f"
              git rm -rf --ignore-unmatch "$f" || true
            fi
          done
          # 혹시 남은 빈 디렉터리 정리
          find . -type d -empty -not -path './.git' -not -path './notes' -delete


      - name: Generate wiki pages (write into ./wiki)
        env:
          STAR_TOKEN: ${{ secrets.STAR_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          TITLE_STYLE: newline
          NOTE_LABEL: "노트"
          NOTE_EMOJI: "📝"
        run: node scripts/update-wiki.js


      - name: Preview generated files
        run: |
          echo "===== wiki/ ====="
          ls -al wiki || true
          echo "----- Home.md preview -----"
          head -n 30 wiki/Home.md || true

      - name: Commit & push to Wiki
        working-directory: wiki
        run: |
          git config user.name  "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git add -A
          if git diff --cached --quiet; then
            echo "No changes."
          else
            git commit -m "chore(wiki): clean & rebuild from stars [skip ci]"
            BRANCH=$(git rev-parse --abbrev-ref HEAD 2>/dev/null || echo master)
            git push origin "$BRANCH"
          fi
